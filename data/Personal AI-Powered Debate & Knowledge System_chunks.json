[
    "What This Is: A Personal AI-Powered Debate & Knowledge System\nThis project is a powerful, personalized tool designed to transform how you\nconsume and retain information. Instead of a passive note-taking app, it acts as a\n\"living philosophy engine,\" helping you to actively engage with new ideas, find\ncontradictions, and build a comprehensive, evolving map of your beliefs.\nThis tool is built on two core principles from Ray Dalio's work:",
    "1. Systemizing knowledge: The project automatically extracts key ideas\n(claims) from your books and papers, turning them into a structured,\nsearchable knowledge base.\n2. Thoughtful disagreement: The system's primary function is to compare\nnew ideas against old ones, surfacing disagreements so you can debate\nthem and find a better truth.\nAt its heart, this is a \"perfect memory\" helper, a smart system that not only\nremembers everything you've read but also helps you reason, synthesize, and",
    "apply that knowledge when you need it most.\nWhat It Is Used For\nThe system's purpose is to solve the problem of information overload by giving\nyou a clear, structured way to interact with everything you learn.\n1. Building a Living Record of Your Beliefs\nYou can upload any document\u2014a book, an article, or a PDF\u2014and the AI will\nautomatically pull out the core claims and arguments. Every time you read\nsomething new, this system will automatically compare its ideas to everything",
    "you\u2019ve already read, acting as a personal \"computer alter ego\" to help you find\ncontradictions and agreements. You can then review these comparisons and\npass a verdict (true, false, or unsure), building a living record of what you\nbelieve and why.\n2. The \"Perfect Memory\" Helper\nThis system's most powerful feature is its ability to help you find and synthesize\ninformation. When you have a question, you can simply ask it, and the system",
    "will provide a concise, synthesized answer drawn only from the knowledge you\nhave already consumed and verified. It will then cite the original claims and\nsources, allowing you to instantly recall where you learned the information and\nreview the full context. This is what makes it a \"perfect memory\" \u2014 it not only\nremembers, but it also helps you find and apply your most trusted knowledge.\n3. A \"Credibility-Weighted\" System",
    "3. A \"Credibility-Weighted\" System\nInstead of ranking sources, the system now ranks claims directly. Each claim you\nencounter becomes part of a dynamic belief profile. When you \u201clike\u201d or mark a\nclaim as true, it temporarily becomes the leading belief within that topic or line of\nreasoning. If later you prefer a new claim over the old ones, the system\nautomatically downgrades the credibility of your past choices while elevating the\nnew one.",
    "new one.\nThis means your belief profile evolves over time: the system always knows which\nclaims are your current \u201cwinners,\u201d while also preserving a full record of past\nclaims you once favored. When you ask a question, the system prioritizes the\ncurrently winning claims to give you the most up-to-date reflection of your\nthinking. But if you choose, you can also view alternative answers based on past\nclaims you once supported, giving you a transparent record of how your\nperspective has shifted.",
    "perspective has shifted.\nSources remain attached to each claim so you can always trace back to where\nan idea came from, but they no longer determine credibility. Instead, credibility\nlives at the claim level, shaped by your ongoing decisions and preferences.\n4. The Foundation for Collaboration\nWhile currently designed for personal use, the project's architecture is being built\nwith collaboration in mind. The long-term goal is to allow you and your brother to",
    "connect your individual knowledge bases, enabling you to compare your beliefs\nand debate ideas together on a single platform. This turns a solo project into a\nshared tool for collective truth-seeking.\nProject Breakdown: The 4-Week Sprint (Updated for Claim-Weighted Belief\nSystem)\nWeek 1: Core Logic & The Reasoning Engine (Days 1-7)\nGoal: Build a robust, command-line-based system that can ingest documents, extract claims",
    "with dynamic metadata, store them in a database, and perform basic searches that show your\npast verdicts and belief rankings.\n\u25cf Day 1: AI-Powered Naming & Description\n\u25cb Task: Create a new script, ai_title.py, that takes a document's raw text as\ninput.\n\u25cb Task: This script will use an LLM (from llm.py) to generate a concise title and a\nshort description for the document. The description will be used to dictate the\ndocument's location in the future.",
    "document's location in the future.\n\u25cb Task: Modify ingest.py to call ai_title.py and use the generated title as\nthe doc_name. The description will be saved as metadata.\n\u25cf Day 2-3: The Database Layer\n\u25cb Task: Set up your SQLite database with new schema changes:\n\u25a0 A claims table with columns: claim_id, line_id (topic/debate group),\nclaim_text, belief_score, current_winner (boolean),\ntimestamp, and source_ref.\n\u25a0 A verdicts table to store claim verdict history: claim_id, verdict",
    "(promoted, demoted, unsure), and timestamp.\n\u25cf Day 4-5: Verdict & Belief Logic\n\u25cb Task: Create log_verdict.py to:\n\u25a0 Mark a claim as the new current winner within its line_id group.\n\u25a0 Automatically downgrade past winners in the same line_id (set their\ncurrent_winner to false and lower their belief_score).\n\u25a0 Keep history so you can see shifts over time.\n\u25cf Day 6-7: End-to-End Test\n\u25cb Run full pipeline:\n\u25a0 python ingest.py \"doc1.pdf\"\n\u25a0 python embed.py ...\n\u25a0 python search.py \"Why is the sky blue?\"",
    "\u25a0 python search.py \"Why is the sky blue?\"\n\u25a0 python log_verdict.py --claim_id \"claim123\" --verdict\n\"promote\"\n\u25a0 Verify that the database updates the winner/demotion logic correctly.\nWeek 2: The Synthesis Engine (Days 8-14)\nGoal: Build the core \"perfect memory\" and synthesis functionality with claim-based weighting.\n\u25cf Day 8-9: Synthesis Script\n\u25cb Task: Create synthesize.py. Input: a query and a list of claims.\n\u25cb Task: Use llm.py to generate an answer that:",
    "\u25cb Task: Use llm.py to generate an answer that:\n1. Defaults to citing only the current winning claims.\n2. Includes source references for each claim.\n3. Optionally (via a flag) includes alternative/past claims with lower\ncredibility.\n\u25cf Day 10-11: The Helper CLI\n\u25cb Task: Build helper.py as the main entry point.\n\u25cb Flow:\n1. Perform a semantic search with search.py.\n2. Filter results to include current winners only.\n3. Pass them to synthesize.py.",
    "3. Pass them to synthesize.py.\n4. Print synthesized answer with claim and source citations.\n\u25cb Option: Add a flag --include-past to also display past claims.\n\u25cf Day 12-14: Advanced Features\n\u25cb Task: Add filter options in search.py (e.g., current winners only, past claims, or\nall).\n\u25cb Task: Enhance synthesize.py to distinguish visually between winning and\npast claims in answers.\nWeek 3: Web Interface & Dashboard (Days 15-21)\nGoal: Turn the CLI helper into a clean, claim-focused web app.",
    "\u25cf Day 15-16: Flask Web App\n\u25cb Task: Install Flask + Tailwind CSS.\n\u25cb Task: Build upload page with file input and optional topic field.\n\u25cb Task: Auto-generate title/description with ai_title.py and ingest pipeline.\n\u25cf Day 17-18: Interactive Claims & Verdicts\n\u25cb Task: Create a route to display claims grouped by line_id.\n\u25cb Task: Add \u201cPromote this Claim\u201d button (sets claim as current winner, demotes\nothers in group).\n\u25cb Task: Store all verdicts in verdicts table to keep full history.",
    "\u25cf Day 19-21: My Principles Page\n\u25cb Task: Build a page that shows:\n\u25a0 Current winning claims per line (highlighted).\n\u25a0 Past claims (grayed out but visible).\n\u25cb Task: Add filters (by topic, winner status, belief history).\nWeek 4: Final Polish, Debates & Multiplayer (Days 22-28)\nGoal: Deliver final polished dashboard and prepare for collaboration.\n\u25cf Day 22-23: Helper Dashboard\n\u25cb Task: Build main search bar linked to helper.py.\n\u25cb Task: Display synthesized answers using current winning claims.",
    "\u25cb Task: Add toggle to show past claims for transparency.\n\u25cf Day 24-25: Knowledge Visualization\n\u25cb Task: Create a belief timeline view per topic (showing how your winning claim\nchanged over time).\n\u25cb Task: Implement a \u201crelated debates\u201d view linking claims across lines.\n\u25cf Day 26-27: Collaborative Features\n\u25cb Task: Prep for future multiplayer mode with user accounts/authentication.\n\u25cb Task: Research data-sharing methods so belief profiles can be compared.\n\u25cf Day 28: Final Test & Demo",
    "\u25cf Day 28: Final Test & Demo\n\u25cb Task: Upload a new document, promote/demote claims, and run a query to\nconfirm full claim-weighted logic.\n\u25cb Task: Write a README explaining how claims evolve and how belief shifts are\ntracked."
]